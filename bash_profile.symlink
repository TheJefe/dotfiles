PATH=/usr/local/bin:$PATH
PATH=/usr/local/sbin:$PATH
PATH=$PATH:~/scripts

# Default Editor
export EDITOR=vim

### Setup for pghelper
export PGHOST=localhost

### Setup for docker
export DOCKER_HOST=tcp://192.168.59.103:2376
export DOCKER_CERT_PATH=/Users/Jeff/.boot2docker/certs/boot2docker-vm
export DOCKER_TLS_VERIFY=1

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"
alias herkou="heroku"

# change terminal
#export PS1="\w$ "

## Liquid prompt
source ~/git/liquidprompt/liquidprompt

## tmuxinator autocompletion
source ~/.tmuxinator.bash

RED="\[\033[0;31m\]"
YELLOW="\[\033[0;33m\]"
GREEN="\[\033[0;32m\]"
NO_COLOUR="\[\033[0m\]"

#PS1="$NO_COLOUR:\w$YELLOW\$(parse_git_branch)$NO_COLOUR\$ "

if [ "$(uname -s)" == "Darwin" ]; then
    # bash-completion
    if [ -f `brew --prefix`/etc/bash_completion ]; then
    . `brew --prefix`/etc/bash_completion
    fi
fi

# use vi bindings on the terminal
set -o vi

#improve auto complete
set completion-ignore-case on
set show-all-if-ambiguous on

# improve ruby performance
export RUBY_GC_HEAP_INIT_SLOTS=1000000
export RUBY_HEAP_FREE_MIN=500000
export RUBY_HEAP_SLOTS_INCREMENT=1000000
export RUBY_HEAP_SLOTS_GROWTH_FACTOR=1
export RUBY_GC_MALLOC_LIMIT=100000000
export RUBY_GC_HEAP_FREE_SLOTS=20000

function la {
  ls -alh $1
}

function cf {
  cd -P $1
}

function fd {
for FILE in "$@"
do
  echo $FILE
  grep "$1" $FILE
done | mvim -
}

function kr {
killall -9 ruby
}

function v() {
  $@ | vim -R -
}

# Test Branch: this sets me up to test a particular branch the way I like
function tb() {
  git checkout rc
  git reset --hard origin/rc
  git pull
  git pull --no-ff --no-edit origin $@
}

# shortcut for rails console
function rc() {
if [ -z "$@" ]; then
  rails c
else
  ttmscalr rails_c -f $@
fi
}

# this is just a nicer way of greping for a process
function psgrep(){
  ps aux | grep $@
}

# Special kill will find processes matching a regex and 'kill -9' them
function skill(){
  pgrep -f $@ | xargs kill -9
}

#### share history across terminal sessions
# avoid duplicates..
export HISTCONTROL=ignoredups:erasedups
# append history entries..
shopt -s histappend

# git alias
alias gs="git status"
alias gss='git status -s'
alias gc="git checkout"
alias gp="git pull"
alias gl="git log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(blue)<%an>%Creset' --abbrev-commit"
alias gb="git branch"
alias gd="git diff"
alias gf="git fetch"
alias show="git show"
alias gcontains="git branch -r --contains"
alias gr='git reset --hard'
alias grr="git reset --hard origin/rc"
alias gpn="git pull --no-ff origin"
alias gg="git grep --break --heading --line-number"

# command correction tool
# https://github.com/nvbn/thefuck
alias fuck='eval $(thefuck $(fc -ln -1)); history -r'

# sets up gc for auto-complete
__git_complete gc _git_checkout
__git_complete gp _git_pull
__git_complete gpn _git_pull
__git_complete gl _git_log
__git_complete gb _git_branch
__git_complete gd _git_branch
__git_complete tb _git_checkout
__git_complete gr _git_checkout
# tb is a fuction used for setting up a specific branch to be tested locally

# this must be defined AFTER 'gl' is aliased
function gly() {
if [[ "1" == "$(date +%u)" ]]
  then
    yesterworkday="last friday"
  else
    yesterworkday="yesterday"
fi
gl --since=${yesterworkday}
}

# show list of directories
alias d='ls -l | grep ^d'

# this is a script for listing pull requests
alias gi="/git/gi/gi; open issues.html; sleep 2; rm issues.html"

# startup my tmux sessions
alias startup="mux apangea; mux reporting; mux lp; mux vrome;"

alias cc="cd;clear"

alias retag="ctags -R --exclude=.svn --exclude=.git --exclude=node_modules --exclude=tmp *"
alias eretag="ctags -R -e --exclude=.svn --exclude=.git --exclude=node_modules --exclude=tmp *"

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

export NVM_DIR="/Users/Jeff/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
